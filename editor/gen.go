// +build ignore

// This program generates client.go.
// In there, the frontend application is stored in the global variable
// ClientApplication.
// It uses the template html/template which itself includes all javascript
// and css source files.
package main

import (
	"bufio"
	"bytes"
	"fmt"
	"io"
	"log"
	"os"
	"strconv"
)

func main() {
	out, err := os.Create("client.go")
	if err != nil {
		log.Fatal(err)
	}
	defer out.Close()

	fmt.Fprintf(out, `package main

// auto-generated by gen.go
// do not edit!

var ClientApplication = `)

	tmpl, err := os.Open("html/template")
	if err != nil {
		log.Fatal(err)
	}
	defer tmpl.Close()

	var buf bytes.Buffer

	scanner := bufio.NewScanner(tmpl)
	for scanner.Scan() {
		s := scanner.Text()
		if len(s) > 0 && s[0] == ':' {
			cat(&buf, "html/"+s[1:])
		} else {
			fmt.Fprintf(&buf, "%s\n", s)
		}
	}

	if err := scanner.Err(); err != nil {
		log.Fatal(err)
	}

	out.Write([]byte(strconv.Quote(string(buf.Bytes())) + "\n"))
}

func cat(w io.Writer, file string) {
	if f, err := os.Open(file); err != nil {
		log.Fatal(err)
	} else {
		io.Copy(w, f)
		f.Close()
	}
}
